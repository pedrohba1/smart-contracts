/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Schelling, SchellingInterface } from "../Schelling";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "h",
        type: "bytes32",
      },
    ],
    name: "commit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "nonce",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "generateHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "participants",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "commited",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "verified",
            type: "bool",
          },
          {
            internalType: "enum CommitLib.CommitStatesType",
            name: "myState",
            type: "uint8",
          },
        ],
        internalType: "struct CommitLib.CommitType",
        name: "sc",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "nonce",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "reveal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seeCommit",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setRevealingState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "showCurrentState",
    outputs: [
      {
        internalType: "enum Schelling.RevealingState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum Schelling.RevealingState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000819055506000600160146101000a81548160ff02191690836001811115610098577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550610ef1806100ac6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063708b47301161005b578063708b473014610103578063c19d93fb1461011f578063db8aa9881461013d578063f14fcbc81461016d57610088565b80630230a7001461008d57806304e544cf1461009757806309e69ede146100b557806356051d74146100e5575b600080fd5b61009561019d565b005b61009f61027f565b6040516100ac9190610ad8565b60405180910390f35b6100cf60048036038101906100ca91906107b9565b610296565b6040516100dc9190610b33565b60405180910390f35b6100ed610374565b6040516100fa9190610abd565b60405180910390f35b61011d60048036038101906101189190610834565b610445565b005b6101276104f7565b6040516101349190610ad8565b60405180910390f35b61015760048036038101906101529190610834565b61050a565b6040516101649190610abd565b60405180910390f35b610187600480360381019061018291906107e2565b610585565b6040516101949190610aa2565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022490610b13565b60405180910390fd5b60018060146101000a81548160ff02191690836001811115610278577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550565b6000600160149054906101000a900460ff16905090565b60026020528060005260406000206000915090508060000160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff166001811115610333577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600181111561036b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050905081565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000173__$614c41c9c50fcb0ed3ca03c352eb95b0f0$__63b99407ec90916040518263ffffffff1660e01b81526004016103f09190610b4e565b60206040518083038186803b15801561040857600080fd5b505af415801561041c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610440919061080b565b905090565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000173__$614c41c9c50fcb0ed3ca03c352eb95b0f0$__636936fb88909184846040518463ffffffff1660e01b81526004016104c393929190610b92565b60006040518083038186803b1580156104db57600080fd5b505af41580156104ef573d6000803e3d6000fd5b505050505050565b600160149054906101000a900460ff1681565b600060028383604051602001610521929190610a7a565b60405160208183030381529060405260405161053d9190610a63565b602060405180830381855afa15801561055a573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061057d919061080b565b905092915050565b60008060018111156105c0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600160149054906101000a900460ff166001811115610608577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063f90610af3565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000173__$614c41c9c50fcb0ed3ca03c352eb95b0f0$__63eaf69a789091846040518363ffffffff1660e01b81526004016106c4929190610b69565b60006040518083038186803b1580156106dc57600080fd5b505af41580156106f0573d6000803e3d6000fd5b5050505060019050919050565b600061071061070b84610bf5565b610bd0565b90508281526020810184848401111561072857600080fd5b610733848285610d10565b509392505050565b60008135905061074a81610e76565b92915050565b60008135905061075f81610e8d565b92915050565b60008151905061077481610e8d565b92915050565b600082601f83011261078b57600080fd5b813561079b8482602086016106fd565b91505092915050565b6000813590506107b381610ea4565b92915050565b6000602082840312156107cb57600080fd5b60006107d98482850161073b565b91505092915050565b6000602082840312156107f457600080fd5b600061080284828501610750565b91505092915050565b60006020828403121561081d57600080fd5b600061082b84828501610765565b91505092915050565b6000806040838503121561084757600080fd5b600083013567ffffffffffffffff81111561086157600080fd5b61086d8582860161077a565b925050602061087e858286016107a4565b9150509250929050565b61089181610c86565b82525050565b6108a081610c86565b82525050565b6108af81610c92565b82525050565b6108be81610c92565b82525050565b6108cd81610c92565b82525050565b60006108de82610c26565b6108e88185610c3c565b93506108f8818560208601610d1f565b80840191505092915050565b61090d81610cec565b82525050565b61091c81610cfe565b82525050565b600061092d82610c31565b6109378185610c58565b9350610947818560208601610d1f565b61095081610deb565b840191505092915050565b600061096682610c31565b6109708185610c69565b9350610980818560208601610d1f565b80840191505092915050565b6000610999601383610c47565b91506109a482610dfc565b602082019050919050565b60006109bc601583610c47565b91506109c782610e25565b602082019050919050565b6080820160008201516109e860008501826108a6565b5060208201516109fb6020850182610a2e565b506040820151610a0e6040850182610888565b506060820151610a216060850182610904565b50505050565b8082525050565b610a3781610ce2565b82525050565b610a4681610ce2565b82525050565b610a5d610a5882610ce2565b610d83565b82525050565b6000610a6f82846108d3565b915081905092915050565b6000610a86828561095b565b9150610a928284610a4c565b6020820191508190509392505050565b6000602082019050610ab76000830184610897565b92915050565b6000602082019050610ad260008301846108b5565b92915050565b6000602082019050610aed6000830184610913565b92915050565b60006020820190508181036000830152610b0c8161098c565b9050919050565b60006020820190508181036000830152610b2c816109af565b9050919050565b6000608082019050610b4860008301846109d2565b92915050565b6000602082019050610b636000830184610a27565b92915050565b6000604082019050610b7e6000830185610a27565b610b8b60208301846108c4565b9392505050565b6000606082019050610ba76000830186610a27565b8181036020830152610bb98185610922565b9050610bc86040830184610a3d565b949350505050565b6000610bda610beb565b9050610be68282610d52565b919050565b6000604051905090565b600067ffffffffffffffff821115610c1057610c0f610dbc565b5b610c1982610deb565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000610c7f82610cc2565b9050919050565b60008115159050919050565b6000819050919050565b6000819050610caa82610e4e565b919050565b6000819050610cbd82610e62565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610cf782610c9c565b9050919050565b6000610d0982610caf565b9050919050565b82818337600083830152505050565b60005b83811015610d3d578082015181840152602081019050610d22565b83811115610d4c576000848401525b50505050565b610d5b82610deb565b810181811067ffffffffffffffff82111715610d7a57610d79610dbc565b5b80604052505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f697427732074696d6520746f2072657665616c00000000000000000000000000600082015250565b7f796f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b60028110610e5f57610e5e610d8d565b5b50565b60028110610e7357610e72610d8d565b5b50565b610e7f81610c74565b8114610e8a57600080fd5b50565b610e9681610c92565b8114610ea157600080fd5b50565b610ead81610ce2565b8114610eb857600080fd5b5056fea26469706673582212203a4d85e46b86ebfbcfaea4b566fba80ab29b47515eaf1e1e194b21a333d7001e64736f6c63430008040033";

type SchellingConstructorParams =
  | [linkLibraryAddresses: SchellingLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SchellingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Schelling__factory extends ContractFactory {
  constructor(...args: SchellingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        Schelling__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: SchellingLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$614c41c9c50fcb0ed3ca03c352eb95b0f0\\$__", "g"),
      linkLibraryAddresses["contracts/CommitLib.sol:CommitLib"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<Schelling> {
    return super.deploy(overrides || {}) as Promise<Schelling>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Schelling {
    return super.attach(address) as Schelling;
  }
  connect(signer: Signer): Schelling__factory {
    return super.connect(signer) as Schelling__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SchellingInterface {
    return new utils.Interface(_abi) as SchellingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Schelling {
    return new Contract(address, _abi, signerOrProvider) as Schelling;
  }
}

export interface SchellingLibraryAddresses {
  ["contracts/CommitLib.sol:CommitLib"]: string;
}
