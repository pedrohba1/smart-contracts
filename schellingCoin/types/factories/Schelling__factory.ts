/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Schelling, SchellingInterface } from "../Schelling";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_votingCase",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "h",
        type: "bytes32",
      },
    ],
    name: "commit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "geCommitValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "nonce",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "generateHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getMajority",
    outputs: [
      {
        internalType: "enum Schelling.PossibleVotes",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNoVoters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getYesVoters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "participants",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "commited",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "verified",
            type: "bool",
          },
          {
            internalType: "enum CommitLib.CommitStatesType",
            name: "myState",
            type: "uint8",
          },
        ],
        internalType: "struct CommitLib.CommitType",
        name: "sc",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "nonce",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "reveal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seeCommit",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setFinishedState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setMajority",
    outputs: [
      {
        internalType: "enum Schelling.PossibleVotes",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setRevealingState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "showCurrentState",
    outputs: [
      {
        internalType: "enum Schelling.RevealingState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum Schelling.RevealingState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006003556000600455604051620020793803806200207983398181016040528101906200003391906200020f565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000819055506000600560006101000a81548160ff02191690836002811115620000c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055508060029080519060200190620000e5929190620000ed565b5050620003c4565b828054620000fb90620002e9565b90600052602060002090601f0160209004810192826200011f57600085556200016b565b82601f106200013a57805160ff19168380011785556200016b565b828001600101855582156200016b579182015b828111156200016a5782518255916020019190600101906200014d565b5b5090506200017a91906200017e565b5090565b5b80821115620001995760008160009055506001016200017f565b5090565b6000620001b4620001ae846200027d565b62000254565b905082815260208101848484011115620001cd57600080fd5b620001da848285620002b3565b509392505050565b600082601f830112620001f457600080fd5b8151620002068482602086016200019d565b91505092915050565b6000602082840312156200022257600080fd5b600082015167ffffffffffffffff8111156200023d57600080fd5b6200024b84828501620001e2565b91505092915050565b60006200026062000273565b90506200026e82826200031f565b919050565b6000604051905090565b600067ffffffffffffffff8211156200029b576200029a62000384565b5b620002a682620003b3565b9050602081019050919050565b60005b83811015620002d3578082015181840152602081019050620002b6565b83811115620002e3576000848401525b50505050565b600060028204905060018216806200030257607f821691505b6020821081141562000319576200031862000355565b5b50919050565b6200032a82620003b3565b810181811067ffffffffffffffff821117156200034c576200034b62000384565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b611ca580620003d46000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80639e8adaad11610097578063e12ed15711610066578063e12ed1571461023c578063f02115811461025a578063f14fcbc814610278578063f45845ce146102a8576100f5565b80639e8adaad146101da578063b88a802f146101e4578063c19d93fb146101ee578063db8aa9881461020c576100f5565b806313b7ce3c116100d357806313b7ce3c146101525780634737c0c21461017057806356051d74146101a0578063708b4730146101be576100f5565b80630230a700146100fa57806304e544cf1461010457806309e69ede14610122575b600080fd5b6101026102c6565b005b61010c6103a9565b60405161011991906115e6565b60405180910390f35b61013c600480360381019061013791906111df565b6103c0565b60405161014991906116e1565b60405180910390f35b61015a61049e565b604051610167919061177e565b60405180910390f35b61018a600480360381019061018591906111df565b6104a8565b604051610197919061177e565b60405180910390f35b6101a86104f7565b6040516101b591906115b0565b60405180910390f35b6101d860048036038101906101d3919061125a565b6105c8565b005b6101e261080e565b005b6101ec6108f1565b005b6101f6610ce4565b60405161020391906115e6565b60405180910390f35b6102266004803603810190610221919061125a565b610cf7565b60405161023391906115b0565b60405180910390f35b610244610d72565b604051610251919061177e565b60405180910390f35b610262610d7c565b60405161026f91906115cb565b60405180910390f35b610292600480360381019061028d9190611208565b610de2565b60405161029f9190611595565b60405180910390f35b6102b0610f5a565b6040516102bd91906115cb565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034d90611641565b60405180910390fd5b6001600560006101000a81548160ff021916908360028111156103a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550565b6000600560009054906101000a900460ff16905090565b60066020528060005260406000206000915090508060000160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff16600181111561045d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115610495577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050905081565b6000600354905090565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600101549050919050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000173__$614c41c9c50fcb0ed3ca03c352eb95b0f0$__63b99407ec90916040518263ffffffff1660e01b815260040161057391906116fc565b60206040518083038186803b15801561058b57600080fd5b505af415801561059f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c39190611231565b905090565b60016002811115610602577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600560009054906101000a900460ff16600281111561064a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068190611621565b60405180910390fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000173__$614c41c9c50fcb0ed3ca03c352eb95b0f0$__636936fb88909184846040518463ffffffff1660e01b815260040161070893929190611740565b60006040518083038186803b15801561072057600080fd5b505af4158015610734573d6000803e3d6000fd5b505050506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016001015414156107a157600160046000828254610799919061183d565b925050819055505b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160010154141561080a57600160036000828254610802919061183d565b925050819055505b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461089e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089590611641565b60405180910390fd5b6002600560006101000a81548160ff021916908360028111156108ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550565b60028081111561092a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600560009054906101000a900460ff166002811115610972577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146109b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a990611661565b60405180910390fd5b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160020160009054906101000a900460ff16151514610a4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4290611681565b60405180910390fd5b600560019054906101000a900460ff166001811115610a93577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016001015414610b19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1090611601565b60405180910390fd5b60006001811115610b53577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600560019054906101000a900460ff166001811115610b9b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610bfe576000600354600054610bb39190611893565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610bfb573d6000803e3d6000fd5b50505b600180811115610c37577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600560019054906101000a900460ff166001811115610c7f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610ce2576000600354600054610c979190611893565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610cdf573d6000803e3d6000fd5b50505b565b600560009054906101000a900460ff1681565b600060028383604051602001610d0e92919061156d565b604051602081830303815290604052604051610d2a9190611556565b602060405180830381855afa158015610d47573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610d6a9190611231565b905092915050565b6000600454905090565b60006004546003541415610dc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbc906116c1565b60405180910390fd5b6004546003541115610dda5760009050610ddf565b600190505b90565b6000806002811115610e1d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600560009054906101000a900460ff166002811115610e65577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610ea5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9c906116a1565b60405180910390fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000173__$614c41c9c50fcb0ed3ca03c352eb95b0f0$__63eaf69a789091846040518363ffffffff1660e01b8152600401610f21929190611717565b60006040518083038186803b158015610f3957600080fd5b505af4158015610f4d573d6000803e3d6000fd5b5050505060019050919050565b6000600280811115610f95577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600560009054906101000a900460ff166002811115610fdd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461101d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101490611661565b60405180910390fd5b6004546003541415611064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105b906116c1565b60405180910390fd5b60045460035411156110ca576000600560016101000a81548160ff021916908360018111156110bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060009050611120565b6001600560016101000a81548160ff02191690836001811115611116577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600190505b90565b6000611136611131846117be565b611799565b90508281526020810184848401111561114e57600080fd5b611159848285611985565b509392505050565b60008135905061117081611c2a565b92915050565b60008135905061118581611c41565b92915050565b60008151905061119a81611c41565b92915050565b600082601f8301126111b157600080fd5b81356111c1848260208601611123565b91505092915050565b6000813590506111d981611c58565b92915050565b6000602082840312156111f157600080fd5b60006111ff84828501611161565b91505092915050565b60006020828403121561121a57600080fd5b600061122884828501611176565b91505092915050565b60006020828403121561124357600080fd5b60006112518482850161118b565b91505092915050565b6000806040838503121561126d57600080fd5b600083013567ffffffffffffffff81111561128757600080fd5b611293858286016111a0565b92505060206112a4858286016111ca565b9150509250929050565b6112b7816118d6565b82525050565b6112c6816118d6565b82525050565b6112d5816118e2565b82525050565b6112e4816118e2565b82525050565b6112f3816118e2565b82525050565b6000611304826117ef565b61130e8185611805565b935061131e818560208601611994565b80840191505092915050565b6113338161194f565b82525050565b61134281611961565b82525050565b61135181611973565b82525050565b6000611362826117fa565b61136c8185611821565b935061137c818560208601611994565b61138581611abe565b840191505092915050565b600061139b826117fa565b6113a58185611832565b93506113b5818560208601611994565b80840191505092915050565b60006113ce601c83611810565b91506113d982611acf565b602082019050919050565b60006113f1601083611810565b91506113fc82611af8565b602082019050919050565b6000611414601583611810565b915061141f82611b21565b602082019050919050565b6000611437601183611810565b915061144282611b4a565b602082019050919050565b600061145a601683611810565b915061146582611b73565b602082019050919050565b600061147d601783611810565b915061148882611b9c565b602082019050919050565b60006114a0600383611810565b91506114ab82611bc5565b602082019050919050565b6080820160008201516114cc60008501826112cc565b5060208201516114df6020850182611512565b5060408201516114f260408501826112ae565b506060820151611505606085018261132a565b50505050565b8082525050565b61151b81611945565b82525050565b61152a81611945565b82525050565b61153981611945565b82525050565b61155061154b82611945565b6119f8565b82525050565b600061156282846112f9565b915081905092915050565b60006115798285611390565b9150611585828461153f565b6020820191508190509392505050565b60006020820190506115aa60008301846112bd565b92915050565b60006020820190506115c560008301846112db565b92915050565b60006020820190506115e06000830184611339565b92915050565b60006020820190506115fb6000830184611348565b92915050565b6000602082019050818103600083015261161a816113c1565b9050919050565b6000602082019050818103600083015261163a816113e4565b9050919050565b6000602082019050818103600083015261165a81611407565b9050919050565b6000602082019050818103600083015261167a8161142a565b9050919050565b6000602082019050818103600083015261169a8161144d565b9050919050565b600060208201905081810360008301526116ba81611470565b9050919050565b600060208201905081810360008301526116da81611493565b9050919050565b60006080820190506116f660008301846114b6565b92915050565b6000602082019050611711600083018461150b565b92915050565b600060408201905061172c600083018561150b565b61173960208301846112ea565b9392505050565b6000606082019050611755600083018661150b565b81810360208301526117678185611357565b90506117766040830184611530565b949350505050565b60006020820190506117936000830184611521565b92915050565b60006117a36117b4565b90506117af82826119c7565b919050565b6000604051905090565b600067ffffffffffffffff8211156117d9576117d8611a8f565b5b6117e282611abe565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061184882611945565b915061185383611945565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561188857611887611a02565b5b828201905092915050565b600061189e82611945565b91506118a983611945565b9250826118b9576118b8611a31565b5b828204905092915050565b60006118cf82611925565b9050919050565b60008115159050919050565b6000819050919050565b60008190506118fa82611bee565b919050565b600081905061190d82611c02565b919050565b600081905061192082611c16565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061195a826118ec565b9050919050565b600061196c826118ff565b9050919050565b600061197e82611912565b9050919050565b82818337600083830152505050565b60005b838110156119b2578082015181840152602081019050611997565b838111156119c1576000848401525b50505050565b6119d082611abe565b810181811067ffffffffffffffff821117156119ef576119ee611a8f565b5b80604052505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f766f7465206973206e6f742073616d65206173206d616a6f7269747900000000600082015250565b7f63616e27742072657665616c2079657400000000000000000000000000000000600082015250565b7f796f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b7f69742069736e27742066696e6973686564000000000000000000000000000000600082015250565b7f636f6d6d6974206973206e6f7420766572696669656400000000000000000000600082015250565b7f69742773206e6f742074696d6520746f20636f6d6d6974000000000000000000600082015250565b7f7469650000000000000000000000000000000000000000000000000000000000600082015250565b60028110611bff57611bfe611a60565b5b50565b60028110611c1357611c12611a60565b5b50565b60038110611c2757611c26611a60565b5b50565b611c33816118c4565b8114611c3e57600080fd5b50565b611c4a816118e2565b8114611c5557600080fd5b50565b611c6181611945565b8114611c6c57600080fd5b5056fea26469706673582212201aedcbfcb1c8d3d2347adad7d7c01f673fba62ae41c476dc2b994962447eeeec64736f6c63430008040033";

type SchellingConstructorParams =
  | [linkLibraryAddresses: SchellingLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SchellingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Schelling__factory extends ContractFactory {
  constructor(...args: SchellingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        Schelling__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: SchellingLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$614c41c9c50fcb0ed3ca03c352eb95b0f0\\$__", "g"),
      linkLibraryAddresses["contracts/CommitLib.sol:CommitLib"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _votingCase: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<Schelling> {
    return super.deploy(_votingCase, overrides || {}) as Promise<Schelling>;
  }
  getDeployTransaction(
    _votingCase: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_votingCase, overrides || {});
  }
  attach(address: string): Schelling {
    return super.attach(address) as Schelling;
  }
  connect(signer: Signer): Schelling__factory {
    return super.connect(signer) as Schelling__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SchellingInterface {
    return new utils.Interface(_abi) as SchellingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Schelling {
    return new Contract(address, _abi, signerOrProvider) as Schelling;
  }
}

export interface SchellingLibraryAddresses {
  ["contracts/CommitLib.sol:CommitLib"]: string;
}
