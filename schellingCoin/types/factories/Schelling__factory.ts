/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Schelling, SchellingInterface } from "../Schelling";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_votingCase",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "h",
        type: "bytes32",
      },
    ],
    name: "commit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "nonce",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "generateHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getMajority",
    outputs: [
      {
        internalType: "enum Schelling.PossibleVotes",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "nonce",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "reveal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seeCommit",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setRevealingState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "showCurrentState",
    outputs: [
      {
        internalType: "enum Schelling.RevealingState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006003556000600455604051620012d1380380620012d183398181016040528101906200003391906200020f565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000819055506000600560006101000a81548160ff02191690836001811115620000c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055508060029080519060200190620000e5929190620000ed565b5050620003c4565b828054620000fb90620002e9565b90600052602060002090601f0160209004810192826200011f57600085556200016b565b82601f106200013a57805160ff19168380011785556200016b565b828001600101855582156200016b579182015b828111156200016a5782518255916020019190600101906200014d565b5b5090506200017a91906200017e565b5090565b5b80821115620001995760008160009055506001016200017f565b5090565b6000620001b4620001ae846200027d565b62000254565b905082815260208101848484011115620001cd57600080fd5b620001da848285620002b3565b509392505050565b600082601f830112620001f457600080fd5b8151620002068482602086016200019d565b91505092915050565b6000602082840312156200022257600080fd5b600082015167ffffffffffffffff8111156200023d57600080fd5b6200024b84828501620001e2565b91505092915050565b60006200026062000273565b90506200026e82826200031f565b919050565b6000604051905090565b600067ffffffffffffffff8211156200029b576200029a62000384565b5b620002a682620003b3565b9050602081019050919050565b60005b83811015620002d3578082015181840152602081019050620002b6565b83811115620002e3576000848401525b50505050565b600060028204905060018216806200030257607f821691505b6020821081141562000319576200031862000355565b5b50919050565b6200032a82620003b3565b810181811067ffffffffffffffff821117156200034c576200034b62000384565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610efd80620003d46000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063db8aa9881161005b578063db8aa988146100ef578063e4fc6b6d1461011f578063f021158114610129578063f14fcbc81461014757610088565b80630230a7001461008d57806304e544cf1461009757806356051d74146100b5578063708b4730146100d3575b600080fd5b610095610177565b005b61009f61025a565b6040516100ac9190610a7a565b60405180910390f35b6100bd610271565b6040516100ca9190610a44565b60405180910390f35b6100ed60048036038101906100e8919061081a565b610342565b005b6101096004803603810190610104919061081a565b6104c6565b6040516101169190610a44565b60405180910390f35b610127610541565b005b610131610543565b60405161013e9190610a5f565b60405180910390f35b610161600480360381019061015c91906107c8565b6105a9565b60405161016e9190610a29565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610207576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fe90610ab5565b60405180910390fd5b6001600560006101000a81548160ff02191690836001811115610253577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550565b6000600560009054906101000a900460ff16905090565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000173__$614c41c9c50fcb0ed3ca03c352eb95b0f0$__63b99407ec90916040518263ffffffff1660e01b81526004016102ed9190610af5565b60206040518083038186803b15801561030557600080fd5b505af4158015610319573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033d91906107f1565b905090565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000173__$614c41c9c50fcb0ed3ca03c352eb95b0f0$__636936fb88909184846040518463ffffffff1660e01b81526004016103c093929190610b39565b60006040518083038186803b1580156103d857600080fd5b505af41580156103ec573d6000803e3d6000fd5b505050506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600101541415610459576001600460008282546104519190610c1b565b925050819055505b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016001015414156104c2576001600360008282546104ba9190610c1b565b925050819055505b5050565b6000600283836040516020016104dd929190610a01565b6040516020818303038152906040526040516104f991906109ea565b602060405180830381855afa158015610516573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061053991906107f1565b905092915050565b565b6000600454600354141561058c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058390610ad5565b60405180910390fd5b60045460035411156105a157600090506105a6565b600190505b90565b60008060018111156105e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600560009054906101000a900460ff16600181111561062c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461066c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066390610a95565b60405180910390fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000173__$614c41c9c50fcb0ed3ca03c352eb95b0f0$__63eaf69a789091846040518363ffffffff1660e01b81526004016106e8929190610b10565b60006040518083038186803b15801561070057600080fd5b505af4158015610714573d6000803e3d6000fd5b5050505060019050919050565b600061073461072f84610b9c565b610b77565b90508281526020810184848401111561074c57600080fd5b610757848285610cdb565b509392505050565b60008135905061076e81610e99565b92915050565b60008151905061078381610e99565b92915050565b600082601f83011261079a57600080fd5b81356107aa848260208601610721565b91505092915050565b6000813590506107c281610eb0565b92915050565b6000602082840312156107da57600080fd5b60006107e88482850161075f565b91505092915050565b60006020828403121561080357600080fd5b600061081184828501610774565b91505092915050565b6000806040838503121561082d57600080fd5b600083013567ffffffffffffffff81111561084757600080fd5b61085385828601610789565b9250506020610864858286016107b3565b9150509250929050565b61087781610c71565b82525050565b61088681610c7d565b82525050565b61089581610c7d565b82525050565b60006108a682610bcd565b6108b08185610be3565b93506108c0818560208601610cea565b80840191505092915050565b6108d581610cb7565b82525050565b6108e481610cc9565b82525050565b60006108f582610bd8565b6108ff8185610bff565b935061090f818560208601610cea565b61091881610de5565b840191505092915050565b600061092e82610bd8565b6109388185610c10565b9350610948818560208601610cea565b80840191505092915050565b6000610961601383610bee565b915061096c82610df6565b602082019050919050565b6000610984601583610bee565b915061098f82610e1f565b602082019050919050565b60006109a7600383610bee565b91506109b282610e48565b602082019050919050565b8082525050565b6109cd81610cad565b82525050565b6109e46109df82610cad565b610d4e565b82525050565b60006109f6828461089b565b915081905092915050565b6000610a0d8285610923565b9150610a1982846109d3565b6020820191508190509392505050565b6000602082019050610a3e600083018461086e565b92915050565b6000602082019050610a59600083018461087d565b92915050565b6000602082019050610a7460008301846108cc565b92915050565b6000602082019050610a8f60008301846108db565b92915050565b60006020820190508181036000830152610aae81610954565b9050919050565b60006020820190508181036000830152610ace81610977565b9050919050565b60006020820190508181036000830152610aee8161099a565b9050919050565b6000602082019050610b0a60008301846109bd565b92915050565b6000604082019050610b2560008301856109bd565b610b32602083018461088c565b9392505050565b6000606082019050610b4e60008301866109bd565b8181036020830152610b6081856108ea565b9050610b6f60408301846109c4565b949350505050565b6000610b81610b92565b9050610b8d8282610d1d565b919050565b6000604051905090565b600067ffffffffffffffff821115610bb757610bb6610db6565b5b610bc082610de5565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000610c2682610cad565b9150610c3183610cad565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c6657610c65610d58565b5b828201905092915050565b60008115159050919050565b6000819050919050565b6000819050610c9582610e71565b919050565b6000819050610ca882610e85565b919050565b6000819050919050565b6000610cc282610c87565b9050919050565b6000610cd482610c9a565b9050919050565b82818337600083830152505050565b60005b83811015610d08578082015181840152602081019050610ced565b83811115610d17576000848401525b50505050565b610d2682610de5565b810181811067ffffffffffffffff82111715610d4557610d44610db6565b5b80604052505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f697427732074696d6520746f2072657665616c00000000000000000000000000600082015250565b7f796f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b7f7469650000000000000000000000000000000000000000000000000000000000600082015250565b60028110610e8257610e81610d87565b5b50565b60028110610e9657610e95610d87565b5b50565b610ea281610c7d565b8114610ead57600080fd5b50565b610eb981610cad565b8114610ec457600080fd5b5056fea26469706673582212206555f3530492c27c9ebe52bed71b74520e24821d48cc5d4ed902f474b8c3de4364736f6c63430008040033";

type SchellingConstructorParams =
  | [linkLibraryAddresses: SchellingLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SchellingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Schelling__factory extends ContractFactory {
  constructor(...args: SchellingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        Schelling__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: SchellingLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$614c41c9c50fcb0ed3ca03c352eb95b0f0\\$__", "g"),
      linkLibraryAddresses["contracts/CommitLib.sol:CommitLib"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _votingCase: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<Schelling> {
    return super.deploy(_votingCase, overrides || {}) as Promise<Schelling>;
  }
  getDeployTransaction(
    _votingCase: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_votingCase, overrides || {});
  }
  attach(address: string): Schelling {
    return super.attach(address) as Schelling;
  }
  connect(signer: Signer): Schelling__factory {
    return super.connect(signer) as Schelling__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SchellingInterface {
    return new utils.Interface(_abi) as SchellingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Schelling {
    return new Contract(address, _abi, signerOrProvider) as Schelling;
  }
}

export interface SchellingLibraryAddresses {
  ["contracts/CommitLib.sol:CommitLib"]: string;
}
